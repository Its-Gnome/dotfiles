[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
	let g:deoplete#enable_at_startup = 1
	let g:deoplete#auto_complete_delay = 0
	let g:deoplete#auto_complete_start_length = 1
	let g:deoplete#enable_camel_case = 0
	let g:deoplete#enable_ignore_case = 0
	let g:deoplete#enable_refresh_always = 0
	let g:deoplete#enable_smart_case = 1
	let g:deoplete#file#enable_buffer_path = 1
	let g:deoplete#max_list = 10000
	inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
" Plugin key-mappings.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
"imap <expr><TAB>
" \ pumvisible() ? "\<C-n>" :
" \ neosnippet#expandable_or_jumpable() ?
" \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

" For conceal markers.
if has('conceal')
  set conceallevel=2 concealcursor=niv
endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'zchee/deoplete-clang'
hook_source = '''
	let g:deoplete#sources#clang#libclang_path = '/usr/lib/llvm-3.4/lib/libclang-3.4.so'
	let g:deoplete#sources#clang#clang_header = '/usr/include/clang'
'''
on_ft = ['c', 'cpp', 'cmake']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-jedi'
hook_add = '''
	autocmd FileType python setlocal completeopt-=preview " Do not display docstring
	let g:deoplete#sources#jedi#extra_path = "/usr/local/lib/python3.5/dist-packages/"
'''
on_ft = ['python']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
	set splitright
	let g:quickrun_config={'_': {'split': 'vertical'}}
'''
on_i = 1

[[plugins]]
repo = 'rbtnn/vimconsole.vim'
on_i = 1

[[plugins]]
repo = 'lervag/vimtex'
hook_source = '''
	let g:vimtex_latexmk_options = '-pdfdvi'
	let g:vimtex_view_general_viewer = 'okular'
	let g:vimtex_view_general_options = '--unique @pdf\#src:@line@tex'
	nnoremap <Leader>t :VimtexCompileSS<Enter>
	nnoremap <Leader>v :VimtexView<Enter>
'''
on_ft = ['tex']
